:REVEAL_PROPERTIES:
#+REVEAL_DEFAULT_SLIDE_BACKGROUND: ./images/aspen-background.png
#+REVEAL_TITLE_SLIDE_BACKGROUND: ./images/aspen-background.png
#+REVEAL_THEME: aspen
#+REVEAL_HLEVEL: 1
#+REVEAL_PLUGINS: (markdown notes)
#+REVEAL_DEFAULT_FRAG_STYLE: fade-left
#+OPTIONS: timestamp:nil toc:0 num:nil
#+REVEAL_TITLE_SLIDE: <h2>Aspen Browse Categories<br>as Digital Signage</h2><b>AspenCon 2024</b><p style="line-height: 0.5em;"><span style="font-size: 0.5em;">Bryan Neil Jones<br>Nashville Public Library</span></p><aside class="notes">Hi. I am Bryan. I am a Systems Librarian at Nashville Public Library. Today, I am going to tell you about how Nashville Public Library repurposed digital signage to feature Browse Categories.<br><br>First, I want to thank everyone that helped put AspenCon together. Organizing an event like this a huge lift and I appreciate the work everyone is doing to make this happen.<br><br>Second, I want to note that though I am the person speaking here today, in truth the work was done by my colleages: Jenny Ellis (our web designer), James Staub (the senior Systems Librarian), Larry Jirik (our Intrastructure Manager), Thomas Hammonds (our Applications Analyst), and the devs at ByWater. And all the folks at my library at actually make the content for the screens.</aside>
:END:

* The 'Screens'
 #+ATTR_REVEAL: :frag (t)
 * 32" monitors embedded in walls and shelf ends   
 * 15 monitors at 5 branchs
 * Displayed Aspen Lists created by staff
#+BEGIN_NOTES
The hardware I am talking about today were actually all-in-one computers but for convience, I will refer to them as the 'screens'
1) 32" portrait-oriented, all-in-one computers, embedded in walls and shelf ends.
2) 15 screens at 5 branches
3) Third party software pulled data from Aspen and displayed it in an aesthetically pleasing way
#+END_NOTES
** The Problem
 #+ATTR_REVEAL: :frag (t)
 * Aloof administrators    
 * Finicky software
 * Broken workflows
#+BEGIN_NOTES
1) An administrator that no longer works at my library, subverted protocol and made a business relationship with a local avertising company. Because our normal procedures for on boarding new technology wasn't followed, chaos ensured.
2) This advertising company developed a bepoke content management system to serve content to the screens. The method they had created to pulled data from Aspen, was not stable.
3) There was perpetual confusion as to who was responsible for what. In short, their software stack was fragile, and whose responsibility it was to fix it was nebulous. And staff were very frustrated. 
 #+END_NOTES
** [[./images/display-1.jpeg]]
#+BEGIN_NOTES
What we would often end up with was this: a screen with nothing on it.

Here's what one of the screens looks like on a standard issue book cart.

So that's the problem. What's the solution?
#+END_NOTES
** The Solution
#+BEGIN_NOTES
Aspen!

Specifically, Browse Categories
#+END_NOTES
#+ATTR_REVEAL: :frag (t)
- Aspen!
- Specifically, Browse Categories
** [[./images/displays-2.jpg]] 
#+BEGIN_NOTES
This is what they look like now, embedded in the wall. This is directly across from our circulation desk at the Madison Branch.
+ What you see here are Browse Categories created from staff Lists.
+ They move automatically to next Browse Category after 20 seconds.
+ Staff at branches create their own Categories from Lists or Searches.
+ And granular permissions to only update only the screens at their locations.
+ So how did we get here?
#+END_NOTES
* First steps
#+ATTR_REVEAL: :frag (t) 
- Full screen, locked down
- [[https://www.kioware.com/][Kioware]]
- alternative: [[https://support.mozilla.org/en-US/kb/firefox-enterprise-kiosk-mode][Firefox kiosk mode]]
#+BEGIN_NOTES
1) The old software had kiosk-like features that would launch the software in fullscreen mode and lock the touchscreen. We needed to find a replacement. 
2) Ultimately, we went with Kioware as this satisfied the security concerns of our IT department, and we were already using it on our OPACs. 
3) Depending on your circumstances, Firefox in kiosk mode could be a great free alternative.
#+END_NOTES
** First steps 			 
 #+ATTR_REVEAL: :frag (t)
- Q: How to scope content to a specific branch?
- A: Dummy locations for each location
#+BEGIN_NOTES
1) Effected branches were accustomed to creating content specific to their branch. 
2) To achieve feature parity, in Aspen we created a dummy location; e.g., the Bellevue branch got a Location called Bellevue-Display.  	
#+END_NOTES
**  
[[./images/display-locations.png]]
#+BEGIN_NOTES
This is what it looks like in Aspen Admin GUI. In the Aspen Locations table there is a branch named 'Bellevue' but her u see the word '-Display' appended to it.
#+END_NOTES 
** First steps 			 
 #+ATTR_REVEAL: :frag (t)
- Q: How to scope content to a specific branch?
- A: Browse Category Groups for each dummy Location
#+BEGIN_NOTES
1) I thought we answered this question. Wait there is more. 
2) A corresponding Browse Category Group was created for each dummy Location; e.g., the Browse Category Group is assigned to the Bellevue-Display Location.
#+END_NOTES
** 
[[./images/browse-category-groups.png]]
#+BEGIN_NOTES
This is what it looks like in Aspen Admin GUI.

Those were the first steps. There was more to do.
#+END_NOTES
* Custom Theme/CSS 
#+ATTR_REVEAL: :frag (t)
- Q: How to make it look great?
- A: Jenny Ellis' beautiful, dark [[https://docs.google.com/document/d/1M-mUy-G2Y8oI_AnwW4u9DrWyOyr3yBDmBRh4BaM9jnU][theme]]
#+BEGIN_NOTES
1) How to make it look great?
2) Jenny Ellis' beautiful, dark theme
3) Let's dig into it a little bit
#+END_NOTES
** Custom theme/CSS 
#+ATTR_REVEAL: :frag (t)
+ Eliminates: arrows, mouse, alert bar, and scroll bar
+ Eliminates: language selector, search bar, logo
+ Sets the correct number of book covers 
#+BEGIN_NOTES
So what's custom about it?
1) It elminates arrows, mouse, alert bar, and scroll bar
2) Eliminates: the language selector, search bar, and logo
3) And a number of other things
#+END_NOTES
** Remove mouse 
#+BEGIN_SRC css :export code
/* ================= GET RID OF POINTER ================= */

#content-container {  
pointer-events: none;  
}
#+END_SRC
#+BEGIN_NOTES
This removes the mouse
#+END_NOTES
** Hide scrollbar   
#+BEGIN_SRC css :export code 
/* ================= HIDE SCROLLBAR ================= */

body {
overflow-y: hidden
}
#+END_SRC
#+BEGIN_NOTES
This removes the scroll bar
#+END_NOTES
** Set correct # of covers 
#+BEGIN_SRC css :export code
/* ================= HIDE BOTTOM ROW OF COVERS ================= */
/* Hides all covers after the 4th row, 
so the 5th row of covers and all that follow */
#home-page-browse-results .browse-thumbnail:nth-of-type(1n+17) {
        display: none;
	}
#+END_SRC
#+BEGIN_NOTES
This sets the correct number of covers for our hardware. It's notable that all of our hardware is the same size. This makes things a lot easier.
#+END_NOTES
** All of it
#+BEGIN_SRC css :export code
/* ================= GET RID OF POINTER ================= */

#content-container {  
 pointer-events: none;  
}

/* ================= HIDE SCROLLBAR ================= */

body {
overflow-y: hidden
}

/* ================= HIDE BOTTOM ROW OF COVERS ================= */

/* Hides all covers after the 4th row, so the 5th row of covers and all that follow */

#home-page-browse-results .browse-thumbnail:nth-of-type(1n+17) {
         display: none;
}

/* ================= HIDE THE ARROWS ON BROWSE CATEGORIES ================= */

#browse-category-picker .jcarousel-control-prev, #browse-category-picker .jcarousel-control-next {
         background-color: #000;
         color: #000;
         font-size: 0px;
         display: none;
}

.jcarousel-control-prev, .jcarousel-control-next {
         text-shadow: 0 0 0px #000;
         box-shadow: 0px 0px 0px #000;
}

.col-sm-12, .col-md-12, .col-lg-12 {
         position: relative;
         min-height: 1px;
         padding-left: 15px;
         padding-right: 15px;
}

/* ================= HIDE THE ALERT BAR ================= */

div#system-message-header {
         display: none;
}

/* ================= HIDE LANGUAGE SELECTOR ================= */

#language-selection-header {
         display: none;
}

/* ================= HIDE THE MENU ================= */

div#horizontal-menu-bar-wrapper {
         display: none;
}

/* ================= HIDE THE SEARCH CONTAINER ================= */

div#horizontal-search-container {
         display: none;
}

/* ================= HIDE THE LOGO / BRANDING ================= */

div#header-logo-container {
         display: none;
}

/* ================= HIDE THE PAGE TITLE ================= */

div#headerTextDiv {
         display: none; 
}

/* ================= HIDE THE FOOTER ================= */

div#footer-container {
         display: none;
}

/* ================= STYLE THE PAGE ================= */

body {
         background-color: #000;
}

body .container, #home-page-browse-content {
         background-color: #000000;
         color: #000000;
}

#home-page-browse-content {
         background-color: #000;
padding: 0;
}


#header-wrapper {
         background-color: black;
}

#home-page-browse-header {
         background-color: #000000;
margin-bottom: 25px;
}

#selected-browse-label {
         background-color: #000000;
}

#browse-sub-category-menu button.selected, #browse-sub-category-menu button.selected:hover {
         border-color: #0087AB !important;
         background-color: #97c6d3 !important;
         color: #ffffff !important;
}

.btn-toolbar.pull-right {
         display: none;
}

a#selected-browse-search-link {
         color: #fff;
}

div#more-browse-results {
         display: none;
}

#more-browse-results {
         background-color: #000;
}

.glyphicon-chevron-down:before {
         color: black;
}

a#js-top {
         display: none!important;
}

/* ================= BROWSE CATEGORY STYLES ================= */

.browse-category {
         font-size: 25px;
background-color: #000000 !important;
}

.browse-category div:hover {
         text-decoration: none;
}

.browse-category.selected {
         font-size: 25px;
}

.jcarousel li {
         border: 3px solid #fff;
}

div#selected-browse-label {
         display: none;
}

/* ================= Covers ================= */

.browse-thumbnail {
         background-color: #000;
margin-bottom: 50px
}

.browse-thumbnail img {
                         box-shadow: 5px 5px 0px #ccc;
border: 1px solid #707070;
}
#+END_SRC
#+BEGIN_NOTES
And here's all of it, but it is also linked of the top slide, and Aspen Weekly issue 143.
#+END_NOTES
* Custom JavaScript
#+ATTR_REVEAL: :frag (t)
- Q: How to make Browse Categories automatically move 
- A: James Staub's [[https://docs.google.com/document/d/1M-mUy-G2Y8oI_AnwW4u9DrWyOyr3yBDmBRh4BaM9jnU][custom JavaScript]]
#+BEGIN_NOTES
1) The old software displayed covers as an animated scroll. We had to figure out a way for the Browse Categories move on their own. 
2) James Staub, our senior systems librarian, wrote a JavaScript snippet to automate the rotation of Browse Categories. 
- The snippet causes the current Category to advance to the next Category after twenty seconds 
- Then refresh the page after reaching the last Category in the Group. The last part is very important because this is what enables staff to make changes from their workstations without have to touch the hardware itself which is difficult to access. When the page refreshes, their changes appear. 
#+END_NOTES
** Move to next Category after X seconds
#+BEGIN_SRC javascript :export code
if (location.pathname == '/') {
	var reloadURL = window.location.href;
	var rotateTime = 20000;
	var rotateCount = 0;
	function rotateCategory()
#+END_SRC
#+BEGIN_NOTES
That variable right there--20k miliseconds.
If you are watching closely, you might be thinking that actually doesn't make it move. 
It's the fuction that is named but not known that makes it move. 
#+END_NOTES
** Refresh after the last Category
#+BEGIN_SRC javascript :export code
function rotateCategory() {
      var bccount = $('.jcarousel').jcarousel('items').length;
      var nextCategory = null;		
      nextCategory = $('[data-category-id='+AspenDiscovery.Browse.curCategory+']').next().attr('data-category-id');
      if (!nextCategory || rotateCount >= bccount - 1 ) { 
                          window.location.href = reloadURL;
      }
      rotateCount++;
      AspenDiscovery.Browse.changeBrowseCategory(nextCategory);
}
#+END_SRC
#+BEGIN_NOTES
Here's the fuction that actually makes it move. 
Full disclosure, I can barely explain what this does. More on that later.
#+END_NOTES
** All of it
#+BEGIN_SRC javascript :export code
<script>

if (location.pathname == '/') {
	var reloadURL = window.location.href;
	var rotateTime = 20000;
	var rotateCount = 0;
	function rotateCategory() {
		var bccount = $('.jcarousel').jcarousel('items').length;
		var nextCategory = null;		
		nextCategory = $('[data-category-id='+AspenDiscovery.Browse.curCategory+']').next().attr('data-category-id');
		if (!nextCategory || rotateCount >= bccount - 1 ) { 
			window.location.href = reloadURL;
		}
		rotateCount++;
		AspenDiscovery.Browse.changeBrowseCategory(nextCategory);
	}
	
	setTimeout(
		function waitForIt(){
			if(typeof AspenDiscovery.Browse.curCategory !== "undefined"){
				setInterval(rotateCategory,rotateTime)
			}else{
				setTimeout(waitForIt,250)
			}
		},750);
}
</script>
#+END_SRC
#+BEGIN_NOTES
And here's all of it. At the end if you have questions, we can go over it. 
#+END_NOTES
* Granular permissions
#+ATTR_REVEAL: :frag (t)
- aka don't move my stapler
#+BEGIN_NOTES
We have a lot of Browse Categories at our library (probably too many). The Collections + Technology team manages the system-wide Browse Category Groups centrally. We didn't want anyone moving our stapler.
#+END_NOTES
** Granular permissions
[[./images/stapler.png]]
#+BEGIN_NOTES
With the release of Aspen Discovery 23.06 we had the ability granularly assign permissions to specific staff members to edit only specific Browse Category Groups. This permission is called 'Administer Selected Browse Category Groups'.
#+END_NOTES
** Don't move my stapler
[[./images/granular-permissions.png]]
#+BEGIN_NOTES
Here are the accounts that can edit the Madison-Display Browse Category Group. No one moves our stapler though maybe it would psychologically healthy if someone did.
#+END_NOTES
* Staff Training
#+ATTR_REVEAL: :frag (t) 
- What's a 'Browse Category'?
- instructional PDF, video calls
- +/-
#+BEGIN_NOTES 
I had to train staff to use the 'new platform'. 

1) The staff who were creating content with old system didn't know about Aspen Browse Categories. 

2) I created a document that walked them through the process of creating Browse Categories. The first link on the training document was the Aspen Help Center. Big thank you to everyone at built that resource. I also made myself available for video calls.

3) P: Staff were appreciative that their screens got fixed. 
- P: Staff appreciative there was a clear chain of responsibility.
- N: Some staff were disappointed in the functionality. I could have managed the expectations better. It was difficult for me to communicate that Searches were the best way to have dynamic Categories as opposed to Lists. 
- N: Some staff are just poison-pilled on the topic of this hardware. 
#+END_NOTES 
* Future Steps
#+ATTR_REVEAL: :frag (t) 
- Info boxes
- Interactive navigation
- Randomized covers
- Use Web Builder (not Browse Categories)
#+BEGIN_NOTES  
1) We would like to be able to tap covers and get an info box about the title. (The old software did this)
2) Some way to have viewers navigate between categories
3) Randomized covers (let's all put tickets in about this)
4) Perhaps use Web Builder to serve the content instead of Browse Categories 
#+END_NOTES 
* Takeaways
#+ATTR_REVEAL: :frag (t) 
- Follow procedures
- Learn to code*
- Invest in a test server
- Respect yourself, respect others
#+BEGIN_NOTES
1) Follow your procedures. Though Aspen was the solution it was a solution with were scrambling for because things were done outside the normal ***
2) Learn to code with a big asterisk. Obviously, if you can write the CSS + JavaScript yourself that's a boon. The asterisk is there because valuing the work of computer programmers above the work**** of others is toxic. AND if can/can't code AI has made understanding what the code is doing and/or writing it yourself by a significant degree. Bigger asterisk: current business model for AI isn't ethical because the companies that are creating the commerical products have ignored copyright law to create their those, but are using that same copyright law to 
3) Invest in a test server. Not strictly neccessary, but helpful when working on projects like this. 
4) This project was difficult to complete. So much so that I considered pulling a Plan B, showing up here and doing a completely different presentation than what was advertised. And doing a presentation about how to deal with difficult workplace situations. Like I said though I really appreciate the work that everyone has done/is doing to make AspenCon a thing, so I'll wait to AspenCon 2 to pull those kinds of pranks.

Bringing it back home, I was the project manager. If the project was difficult that is on me. Figuring why it was difficult, that introspection and asking for feedback.    
#+END_NOTES
* All the Things in All the Places
- [[https://bld.library.nashville.org][Bellevue]]
- [[https://bxd.library.nashville.org][Bordeaux]]
- [[https://epd.library.nashville.org][Edmondson Pike]]
- [[https://mad.library.nashville.org][Madison (screen one)]]
- [[https://mad2.library.nashville.org][Madison (screen two)]]
- [[https://sed.library.nashville.org][Southeast]]
- [[https://wpd.library.nashville.org][Watkins Park]]
#+BEGIN_NOTES

#+END_NOTES  
